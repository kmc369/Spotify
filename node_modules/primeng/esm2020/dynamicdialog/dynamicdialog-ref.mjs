import { Subject } from 'rxjs';
export class DynamicDialogRef {
    constructor() {
        this._onClose = new Subject();
        this.onClose = this._onClose.asObservable();
        this._onDestroy = new Subject();
        this.onDestroy = this._onDestroy.asObservable();
        this._onDragStart = new Subject();
        this.onDragStart = this._onDragStart.asObservable();
        this._onDragEnd = new Subject();
        this.onDragEnd = this._onDragEnd.asObservable();
        this._onResizeInit = new Subject();
        this.onResizeInit = this._onResizeInit.asObservable();
        this._onResizeEnd = new Subject();
        this.onResizeEnd = this._onResizeEnd.asObservable();
        this._onMaximize = new Subject();
        this.onMaximize = this._onMaximize.asObservable();
    }
    close(result) {
        this._onClose.next(result);
        setTimeout(() => {
            this._onClose.complete();
        }, 1000);
    }
    destroy() {
        this._onDestroy.next(null);
    }
    dragStart(event) {
        this._onDragStart.next(event);
    }
    dragEnd(event) {
        this._onDragEnd.next(event);
    }
    resizeInit(event) {
        this._onResizeInit.next(event);
    }
    resizeEnd(event) {
        this._onResizeEnd.next(event);
    }
    maximize(value) {
        this._onMaximize.next(value);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pY2RpYWxvZy1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBwL2NvbXBvbmVudHMvZHluYW1pY2RpYWxvZy9keW5hbWljZGlhbG9nLXJlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRTNDLE1BQU0sT0FBTyxnQkFBZ0I7SUFDekI7UUFrQ2lCLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1FBQy9DLFlBQU8sR0FBb0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUV2QyxlQUFVLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUNqRCxjQUFTLEdBQW9CLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFM0MsaUJBQVksR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1FBQ25ELGdCQUFXLEdBQW9CLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFL0MsZUFBVSxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7UUFDakQsY0FBUyxHQUFvQixJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRTNDLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUNwRCxpQkFBWSxHQUFvQixJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRWpELGlCQUFZLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUNuRCxnQkFBVyxHQUFvQixJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRS9DLGdCQUFXLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUNsRCxlQUFVLEdBQW9CLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7SUFyRC9DLENBQUM7SUFFaEIsS0FBSyxDQUFDLE1BQVk7UUFDZCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUUzQixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ1osSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM3QixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUQsT0FBTztRQUNILElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBaUI7UUFDdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFpQjtRQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVSxDQUFDLEtBQWlCO1FBQ3hCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBaUI7UUFDdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFVO1FBQ2YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQXNCSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGNsYXNzIER5bmFtaWNEaWFsb2dSZWYge1xuICAgIGNvbnN0cnVjdG9yKCkge31cblxuICAgIGNsb3NlKHJlc3VsdD86IGFueSkge1xuICAgICAgICB0aGlzLl9vbkNsb3NlLm5leHQocmVzdWx0KTtcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX29uQ2xvc2UuY29tcGxldGUoKTtcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgfVxuXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5fb25EZXN0cm95Lm5leHQobnVsbCk7XG4gICAgfVxuXG4gICAgZHJhZ1N0YXJ0KGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgICAgIHRoaXMuX29uRHJhZ1N0YXJ0Lm5leHQoZXZlbnQpO1xuICAgIH1cblxuICAgIGRyYWdFbmQoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5fb25EcmFnRW5kLm5leHQoZXZlbnQpO1xuICAgIH1cblxuICAgIHJlc2l6ZUluaXQoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5fb25SZXNpemVJbml0Lm5leHQoZXZlbnQpO1xuICAgIH1cblxuICAgIHJlc2l6ZUVuZChldmVudDogTW91c2VFdmVudCkge1xuICAgICAgICB0aGlzLl9vblJlc2l6ZUVuZC5uZXh0KGV2ZW50KTtcbiAgICB9XG5cbiAgICBtYXhpbWl6ZSh2YWx1ZTogYW55KSB7XG4gICAgICAgIHRoaXMuX29uTWF4aW1pemUubmV4dCh2YWx1ZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25DbG9zZSA9IG5ldyBTdWJqZWN0PGFueT4oKTtcbiAgICBvbkNsb3NlOiBPYnNlcnZhYmxlPGFueT4gPSB0aGlzLl9vbkNsb3NlLmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25EZXN0cm95ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgIG9uRGVzdHJveTogT2JzZXJ2YWJsZTxhbnk+ID0gdGhpcy5fb25EZXN0cm95LmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25EcmFnU3RhcnQgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG4gICAgb25EcmFnU3RhcnQ6IE9ic2VydmFibGU8YW55PiA9IHRoaXMuX29uRHJhZ1N0YXJ0LmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25EcmFnRW5kID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgIG9uRHJhZ0VuZDogT2JzZXJ2YWJsZTxhbnk+ID0gdGhpcy5fb25EcmFnRW5kLmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25SZXNpemVJbml0ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgIG9uUmVzaXplSW5pdDogT2JzZXJ2YWJsZTxhbnk+ID0gdGhpcy5fb25SZXNpemVJbml0LmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25SZXNpemVFbmQgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG4gICAgb25SZXNpemVFbmQ6IE9ic2VydmFibGU8YW55PiA9IHRoaXMuX29uUmVzaXplRW5kLmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBfb25NYXhpbWl6ZSA9IG5ldyBTdWJqZWN0PGFueT4oKTtcbiAgICBvbk1heGltaXplOiBPYnNlcnZhYmxlPGFueT4gPSB0aGlzLl9vbk1heGltaXplLmFzT2JzZXJ2YWJsZSgpO1xufVxuIl19